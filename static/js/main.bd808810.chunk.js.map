{"version":3,"sources":["constants.js","App.js","serviceWorker.js","index.js","logo.svg"],"names":["backendURL","App","calcWeeklyData","state","weeklyData","map","data","prayerCount","parseInt","fajr","duhr","asr","maghrib","isha","weeklyGraphArrData","inbound","push","outbound","prayers","smoke_free","gaze_lowered","weeklyPrayersData","labels","datasets","label","backgroundColor","borderColor","borderWidth","hoverBackgroundColor","hoverBorderColor","weeklyInOutData","weeklyRadarData","setState","prevState","console","log","handleModalClose","modalShow","handleModalShow","handleDailyDataUpdate","key","el","valueAsNum","target","undefined","value","includes","checked","dailyData","forceUpdate","newTarget","dataholder","weeklyPrayers","this","getDailyData","then","res","getWeeklyData","axios","get","catch","err","d","updateForm","currentProgress","weeklyInOutBar","weeklyRadar","time","moment","format","intTime","split","greeting","parseFloat","inbound_goal","outbound_goal","pushups","pushsups_goal","post_inbound","post_inbound_bgcolor","method","action","Card","Body","Row","Col","xs","md","lg","style","minWidth","InputGroup","className","Prepend","Text","color","Checkbox","onChange","e","name","size","step","precision","valueAsString","id","pushups_goal","type","Button","width","height","options","maintainAspectRatio","weeklyPrayersBar","Fragment","Container","Accordion","Toggle","as","Header","eventKey","Collapse","React","Component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message","module","exports"],"mappings":"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","file":"static/js/main.bd808810.chunk.js","sourcesContent":["export const debugBackendURL = 'http://localhost:80/api/responsibilities/';\r\nexport const backendURL = 'https://devhammed.000webhostapp.com/responsibilities/';","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport './App.scss';\nimport { \n  Modal, \n  InputGroup, \n  FormControl, \n  Button,\n  Container,\n  Row,\n  Accordion,\n  Card,\n  Col\n} from 'react-bootstrap'; \nimport {\n  Bar,\n  Radar\n} from 'react-chartjs-2'\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport moment from 'moment';\nimport axios from 'axios';\nimport {debugBackendURL, backendURL} from './constants';\nimport { \n  IoMdTrendingDown,\n  IoMdTrendingUp,\n  IoIosTime,\n  IoIosFitness,\n  IoLogoNoSmoking,\n  IoMdEyeOff\n} from 'react-icons/io';\nimport NumericInput from 'react-numeric-input'\nimport $ from 'jquery'\n\nclass App extends React.Component {\n\n  constructor(){\n    super();\n    //must check in for fajr & check out after isha, everyday.\n    //app gets data for today if exists, else inserts daily data \n    this.state = {\n      newTarget: '10,000',\n      dataholder: {\n        labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'],\n        datasets: [\n          {\n            label: 'My First dataset',\n            backgroundColor: 'rgba(255,99,132,0.2)',\n            borderColor: 'rgba(255,99,132,1)',\n            borderWidth: 1,\n            hoverBackgroundColor: 'rgba(255,99,132,0.4)',\n            hoverBorderColor: 'rgba(255,99,132,1)',\n            data: [65, 59, 80, 200, 56, 55, 40]\n          }\n        ]\n      },\n      dailyData: null,\n      weeklyData:null,\n      weeklyInOutData:null,\n      weeklyPrayers:null,\n      weeklyRadarData: null,\n      modalShow: false,\n      weeklyGraphArrData:{\n        inbound:[],\n        outbound:[],\n        prayers: [],\n        gaze_lowered: [],\n        smoke_free: []\n      },\n    }\n    // console.log(moment().format(\"YYYY-mm-DD\"))\n  }\n\n  componentDidMount(){\n    let dailyData = this.getDailyData()\n    .then( res => {\n      // console.log(res);\n      this.setState({dailyData: res});\n      // alert(JSON.stringify(res));\n    });\n    let weeklyData = this.getWeeklyData()\n      .then( res => {\n        //;loop data and set \n        // console.log(res);\n        this.setState({weeklyData: res}, () => {\n          this.calcWeeklyData();\n          // this.calc\n        });\n    });\n      \n  }\n\n  calcWeeklyData = () => {\n    let inboundArr, outboundArr, prayerArr = [];\n    if(this.state.weeklyData){\n      // console.log(this.state.weeklyData);\n      this.state.weeklyData.map((data) => {\n        // console.log('here', this.state.);\n        let prayerCount = 0;\n        if(parseInt(data.fajr)) prayerCount++;\n        if(parseInt(data.duhr)) prayerCount++;\n        if(parseInt(data.asr)) prayerCount++;\n        if(parseInt(data.maghrib)) prayerCount++;\n        if(parseInt(data.isha)) prayerCount++;\n        this.state.weeklyGraphArrData.inbound.push(data.inbound);\n        this.state.weeklyGraphArrData.outbound.push(data.outbound);\n        this.state.weeklyGraphArrData.prayers.push(prayerCount);\n        this.state.weeklyGraphArrData.smoke_free.push(parseInt(data.smoke_free));\n        this.state.weeklyGraphArrData.gaze_lowered.push(parseInt(data.gaze_lowered));\n      });\n      let weeklyPrayersData = {\n        labels: ['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday'],\n        datasets: [\n          {\n            label: 'Salah (Prayers)',\n            backgroundColor: 'rgba(0, 230, 64, 0.2)',\n            borderColor: 'rgba(0, 230, 64, 1)',\n            borderWidth: 1,\n            hoverBackgroundColor: 'rgba(0, 230, 64, 0.4)',\n            hoverBorderColor: 'rgba(0, 230, 64, 1)',\n            data: this.state.weeklyGraphArrData.prayers\n          }\n        ]\n      }\n      let weeklyInOutData = {\n        labels: ['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday'],\n        datasets: [\n          {\n            label: 'Earned',\n            backgroundColor: 'rgba(0, 230, 64, 0.2)',\n            borderColor: 'rgba(0, 230, 64, 1)',\n            borderWidth: 1,\n            hoverBackgroundColor: 'rgba(0, 230, 64, 0.4)',\n            hoverBorderColor: 'rgba(0, 230, 64, 1)',\n            data: this.state.weeklyGraphArrData.inbound\n          },\n          {\n            label: 'Spent',\n            backgroundColor: 'rgb(207, 0, 15,0.2)',\n            borderColor: 'rgb(207, 0, 15, 1)',\n            borderWidth:1,\n            hoverBackgroundColor: 'rgb(207, 0, 15, 0.4)',\n            hoverBorderColor: 'rgb(207, 0, 15, 1)',\n            data: this.state.weeklyGraphArrData.outbound\n          },\n        ]\n      } \n      let weeklyRadarData = {\n        labels: ['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday'],\n        datasets: [\n          {\n            label: 'Smoking',\n            backgroundColor: 'rgb(154, 18, 179, 0.2)',\n            borderColor: 'rgb(154, 18, 179, 1)',\n            borderWidth: 1,\n            hoverBackgroundColor: 'rgb(154, 18, 179, 0.4)',\n            hoverBorderColor: 'rgb(154, 18, 179, 1)',\n            data: this.state.weeklyGraphArrData.smoke_free,\n          },\n          {\n            label: 'Gaze',\n            backgroundColor: 'rgb(232, 126, 4, 0.2)',\n            borderColor: 'rgb(232, 126, 4, 1)',\n            borderWidth: 1,\n            hoverBackgroundColor: 'rgb(232, 126, 4, 0.4)',\n            hoverBorderColor: 'rgb(232, 126, 4, 1)',\n            data: this.state.weeklyGraphArrData.gaze_lowered,\n          },\n          {\n            label: 'Prayers',\n            backgroundColor: 'rgb(247, 202, 24, 0.2)',\n            borderColor: 'rgb(247, 202, 24, 1)',\n            borderWidth:1,\n            hoverBackgroundColor: 'rgb(247, 202, 24, 0.4)',\n            hoverBorderColor: 'rgb(247, 202, 24, 1)',\n            data: this.state.weeklyGraphArrData.prayers\n          }\n        ]\n      }\n      this.setState(prevState => {\n        return {\n          ...prevState,\n          weeklyRadarData: weeklyRadarData,\n          weeklyInOutData: weeklyInOutData,\n          weeklyPrayersData: weeklyPrayersData,\n\n        }\n      }, () => console.log(this.state));\n    }\n  }\n  async getDailyData(){\n    let d = await axios.get(backendURL+'data_ajax.php?action=getDailyData')\n      .then( res => {\n        // console.log('res', res);\n        let data = res.data[0];\n        return data;\n      })\n      .catch( err => console.log(err));\n    return d;\n  }\n\n  async getWeeklyData(){\n    let d = await axios.get(backendURL+'data_ajax.php?action=getWeeklyData')\n      .then(res => {\n        // console.log('weekly', res, res.dat);\n        let data = res.data;\n        return data;\n      })\n      .catch(err => console.log(err));\n    return d;\n  }\n\n  handleModalClose = () => {\n    this.setState({modalShow: false});\n  }\n  handleModalShow = () => {\n    this.setState({modalShow: true});\n  }\n  // handleSaveMainboard = () => {\n  //   console.log(this.state.dailyData);\n  //   this.state.dailyData.fajr = this.state.dailyData.fajr === 'on' ? true : this.state.dailyData.fajr === 'off' ? false : this.state.dailyData.fajr;\n  //   console.log(this.state.dailyData);\n  //   axios.post(\n  //     \"http://localhost:80/api/responsibilities/daily_ajax.php\", \n  //     JSON.stringify(this.state)\n  //   )\n  //   .then( res => console.log(res))\n  //   .catch( err => console.log(err));\n  // }\n  handleDailyDataUpdate = (key, el, valueAsNum=null) => {\n    let target = el.target != undefined ? el.target : el;\n    let value = el.value\n    if(['fajr', 'duhr', 'asr', 'maghrib', 'isha', 'gaze_lowered', 'smoke_free'].includes(key)){\n      value = target.checked;\n    }\n    if(['inbound', 'outbound', 'inbound_goal', 'outbound_goal'].includes(key)){\n      value = valueAsNum;\n    }\n    console.log(target, value);\n\n    // console.log(target, value, valueAsNum);\n    this.setState(prevState => {\n      return {\n        ...prevState,\n        dailyData: {\n          ...prevState.dailyData,\n          [key]: value\n        }\n      }\n    }, () => this.forceUpdate());\n  }\n\n  render(){\n    /* to do */\n    /* integrate prayer times api to pull data and compare to reflect in colors */\n    let warnings,\n    updateForm,\n    currentProgress,\n    mainboardCard,\n    weeklyIncomeCard, \n    weeklyPrayerCard,\n    weeklyInOutBar,\n    weeklyPrayersBar,\n    weeklyRadar = null;\n    let time = moment().format(\"HH:mm\");\n    let intTime = parseInt(time.split(':')[0]);\n    let greeting = intTime > 17 ? 'Evening' : intTime > 11 ? 'Afternoon' : intTime > 0 ? 'Morning' : '';\n    greeting = 'Good '+greeting;\n    if(this.state.dailyData){\n      currentProgress = {\n        inbound: parseFloat(this.state.dailyData.inbound) >= parseFloat(this.state.dailyData.inbound_goal),\n        outbound: parseFloat(this.state.dailyData.outbound) <= parseFloat(this.state.dailyData.outbound_goal),\n        pushups: parseInt(this.state.dailyData.pushups) > parseInt(this.state.dailyData.pushsups_goal),\n        fajr: this.state.dailyData.fajr === true || parseInt(this.state.dailyData.fajr) ? true:false,\n        duhr: this.state.dailyData.duhr === true || parseInt(this.state.dailyData.duhr) ? true:false,\n        asr: this.state.dailyData.asr === true || parseInt(this.state.dailyData.asr) ? true:false,\n        maghrib: this.state.dailyData.maghrib === true || parseInt(this.state.dailyData.maghrib) ? true:false,  \n        isha: this.state.dailyData.isha === true || parseInt(this.state.dailyData.isha) ? true:false,\n        post_inbound: parseFloat(this.state.dailyData.inbound) - parseFloat(this.state.dailyData.outbound),\n        smoke_free: parseInt(this.state.dailyData.smoke_free),\n        gaze_lowered: parseInt(this.state.dailyData.gaze_lowered)\n      };\n      currentProgress.post_inbound_bgcolor = currentProgress.inbound ? 'bgGreen' : 'bgRed';\n      // console.log(this.currentProgress, this.state.dailyData);\n      updateForm = (\n        <form \n          method=\"post\" \n          action={backendURL+'data_ajax.php'}> \n          <Card.Body>\n            {/* Praer INCOME*/}\n            <h5>Prayers</h5>\n            <Row>\n              <Col xs={5} md={2} lg={2} style={{minWidth:'200px'}}>\n                <InputGroup className=\"mb-3\">\n                  <InputGroup.Prepend>\n                    <InputGroup.Text><IoIosTime className=\"flash\" color={currentProgress.fajr ? 'green' : 'red'}/></InputGroup.Text>\n                    <InputGroup.Text>Fajr</InputGroup.Text>\n                  </InputGroup.Prepend>\n                  <InputGroup.Prepend>\n                    <InputGroup.Checkbox \n                      checked={['1', true, 'on'].includes(this.state.dailyData.fajr)} \n                      onChange={(e) => this.handleDailyDataUpdate('fajr', e)} \n                      name=\"fajr\"\n                      value={this.state.dailyData.fajr}/>\n                  </InputGroup.Prepend>\n                </InputGroup>\n              </Col>\n              <Col xs={5} md={2} lg={2} style={{minWidth:'200px'}}>\n                <InputGroup className=\"mb-3\">\n                  <InputGroup.Prepend>\n                    <InputGroup.Text><IoIosTime className=\"flash\" color={currentProgress.duhr ? 'green' : 'red'}/></InputGroup.Text>\n                    <InputGroup.Text>Duhr</InputGroup.Text>\n                  </InputGroup.Prepend>\n                  <InputGroup.Prepend>\n                    <InputGroup.Checkbox\n                     onChange={(e) => this.handleDailyDataUpdate('duhr', e)}\n                      checked={['1', true, 'on'].includes(this.state.dailyData.duhr)} \n                     name=\"duhr\"\n                     value={this.state.dailyData.duhr}/>\n                  </InputGroup.Prepend>\n                </InputGroup>\n              </Col>\n              <Col xs={5} md={2} lg={2} style={{minWidth:'200px'}}>\n                <InputGroup className=\"mb-3\">\n                  <InputGroup.Prepend>\n                    <InputGroup.Text><IoIosTime className=\"flash\" color={currentProgress.asr ? 'green' : 'red'}/></InputGroup.Text>\n                    <InputGroup.Text>Asr</InputGroup.Text>\n                  </InputGroup.Prepend>\n                  <InputGroup.Prepend>\n                    <InputGroup.Checkbox\n                      checked={['1', true, 'on'].includes(this.state.dailyData.asr)} \n                      onChange={(e) => this.handleDailyDataUpdate('asr', e)} \n                      name=\"asr\"\n                     value={this.state.dailyData.asr}/>\n                  </InputGroup.Prepend>\n                </InputGroup>\n              </Col>\n              <Col xs={5} md={3} lg={2} style={{minWidth:'230px'}}>\n                <InputGroup className=\"mb-3\">\n                  <InputGroup.Prepend>\n                    <InputGroup.Text><IoIosTime className=\"flash\" color={currentProgress.maghrib ? 'green' : 'red'}/></InputGroup.Text>\n                    <InputGroup.Text>Maghrib</InputGroup.Text>\n                  </InputGroup.Prepend>\n                  <InputGroup.Prepend>\n                    <InputGroup.Checkbox \n                      checked={['1', true, 'on'].includes(this.state.dailyData.maghrib)} \n                      onChange={(e) => this.handleDailyDataUpdate('maghrib', e)} \n                      name=\"maghrib\"\n                     value={this.state.dailyData.maghrib}/>\n                  </InputGroup.Prepend>\n                </InputGroup>\n              </Col>\n              <Col xs={5} md={2} lg={2} style={{minWidth:'200px'}}>\n                <InputGroup className=\"mb-3\">\n                  <InputGroup.Prepend>\n                    <InputGroup.Text><IoIosTime className=\"flash\" color={currentProgress.isha ? 'green' : 'red'}/></InputGroup.Text>\n                    <InputGroup.Text>Isha</InputGroup.Text>\n                  </InputGroup.Prepend>\n                  <InputGroup.Prepend>\n                    <InputGroup.Checkbox \n                      checked={['1', true, 'on'].includes(this.state.dailyData.isha)} \n                      onChange={(e) => this.handleDailyDataUpdate('isha', e)} \n                      name=\"isha\"\n                     value={this.state.dailyData.isha}/>\n                  </InputGroup.Prepend>\n                </InputGroup>\n              </Col>\n            </Row>\n            <hr/>\n             <h5>Live <span className={\"flash ball \"+currentProgress.post_inbound_bgcolor}>£{currentProgress.post_inbound}</span></h5>\n            {/* ACTUAL INCOME*/}\n            <Row>\n              <Col xs={12} md={6}>\n                <InputGroup className=\"mb-3\">\n                  <InputGroup.Prepend>\n                    <InputGroup.Text>£</InputGroup.Text>\n                    <InputGroup.Text><IoMdTrendingUp className=\"flash\" color={currentProgress.inbound ? 'green' : 'red'}/></InputGroup.Text>\n                  </InputGroup.Prepend>\n                  <NumericInput \n                    name=\"inbound\"\n                    size={5}\n                    className=\"form-control\"\n                    step={10} \n                    precision={2} \n                    value={this.state.dailyData.inbound}\n                    onChange={(valueAsNum, valueAsString, el) => this.handleDailyDataUpdate('inbound', el, valueAsNum)}\n                    />\n                </InputGroup>\n              </Col>\n              <Col xs={12} md={6}>\n                <InputGroup className=\"mb-3\">\n                  <InputGroup.Prepend>\n                    <InputGroup.Text name=\"outbound\" id=\"basic-addon1\">£</InputGroup.Text>\n                    <InputGroup.Text><IoMdTrendingDown className=\"flash\" color={currentProgress.outbound ? 'green' : 'red'}/></InputGroup.Text>\n                  </InputGroup.Prepend>\n                  <NumericInput \n                    name=\"outbound\"\n                    size={5}\n                    className=\"form-control\"\n                    step={10} \n                    precision={2} \n                    value={this.state.dailyData.outbound}\n                    onChange={(valueAsNum, valueAsString, el) => this.handleDailyDataUpdate('outbound', el, valueAsNum)}\n                    />\n               </InputGroup>\n              </Col>\n            </Row>\n            {/* Goal INCOME*/}\n            <Row>\n              <Col xs={12} md={6}>\n                <InputGroup className=\"mb-3\">\n                  <InputGroup.Prepend>\n                    <InputGroup.Text name=\"inbound\"  id=\"inbound\">£</InputGroup.Text>\n                    <InputGroup.Text>Goal</InputGroup.Text>\n                    <InputGroup.Text><IoMdTrendingUp className=\"flash\" className=\"flash\" color={currentProgress.inbound ? 'green' : 'red'}/></InputGroup.Text>\n                  </InputGroup.Prepend>\n                  <NumericInput \n                    size={5}\n                    className=\"form-control\"\n                    name=\"inbound_goal\"\n                    step={10} \n                    precision={2} \n                    value={this.state.dailyData.inbound_goal}\n                    onChange={(valueAsNum, valueAsString, el) => this.handleDailyDataUpdate('inbound_goal', el, valueAsNum)}/>\n                </InputGroup>\n              </Col>\n              <Col xs={12} md={6}>\n                <InputGroup className=\"mb-3\">\n                  <InputGroup.Prepend>\n                    <InputGroup.Text name=\"outbound\" id=\"basic-addon1\">£</InputGroup.Text>\n                    <InputGroup.Text>Goal</InputGroup.Text>\n                    <InputGroup.Text><IoMdTrendingDown className=\"flash\" color={currentProgress.outbound ? 'green' : 'red'}/></InputGroup.Text>\n                  </InputGroup.Prepend>\n                  <NumericInput \n                    size={5}\n                    className=\"form-control\"\n                    name=\"outbound_goal\"\n                    step={10} \n                    precision={2} \n                    value={this.state.dailyData.outbound_goal}\n                    onChange={(valueAsNum, valueAsString, el) => this.handleDailyDataUpdate('outbound_goal', el, valueAsNum)}/>\n                </InputGroup>\n              </Col>\n            </Row>\n            {/* SMoke and Gaze */}\n            <Row>\n              <Col xs={6}>\n                <InputGroup className=\"mb-3\">\n                  <InputGroup.Prepend>\n                    <InputGroup.Text><IoLogoNoSmoking className=\"flash\" className=\"flash\" color={currentProgress.smoke_free ? 'green' : 'red'}/></InputGroup.Text>\n                    <InputGroup.Text>Smoke Free</InputGroup.Text>\n                  </InputGroup.Prepend>\n                  <InputGroup.Prepend>\n                    <InputGroup.Checkbox \n                      checked={['1', true, 'on'].includes(this.state.dailyData.smoke_free)} \n                      onChange={(e) => this.handleDailyDataUpdate('smoke_free', e)} \n                      name=\"smoke_free\"\n                      value={this.state.dailyData.smoke_free}/>\n                  </InputGroup.Prepend>\n                </InputGroup>\n              </Col>\n              <Col xs={6}>\n                <InputGroup className=\"mb-3\">\n                  <InputGroup.Prepend>\n                    <InputGroup.Text><IoMdEyeOff className=\"flash\" className=\"flash\" color={currentProgress.gaze_lowered ? 'green' : 'red'}/></InputGroup.Text>\n                    <InputGroup.Text>Gaze Lowered</InputGroup.Text>\n                  </InputGroup.Prepend>\n                  <InputGroup.Prepend>\n                    <InputGroup.Checkbox \n                      checked={['1', true, 'on'].includes(this.state.dailyData.gaze_lowered)} \n                      onChange={(e) => this.handleDailyDataUpdate('gaze_lowered', e)} \n                      name=\"gaze_lowered\"\n                      value={this.state.dailyData.gaze_lowered}/>\n                  </InputGroup.Prepend>\n                </InputGroup>\n              </Col>\n            </Row>\n            <hr/>\n            {/* Activity*/}\n            <h5>Fitness</h5>\n            <Row>\n              <Col xs={12} md={6}>\n                <InputGroup className=\"mb-3\">\n                  <InputGroup.Prepend>\n                    <InputGroup.Text><IoIosFitness className=\"flash\" color={currentProgress.pushups ? 'green' : 'red'}/></InputGroup.Text>\n                    <InputGroup.Text>Pushups</InputGroup.Text>\n                  </InputGroup.Prepend>\n                  <NumericInput \n                    size={5}\n                    className=\"form-control\"\n                    name=\"pushups\"\n                    step={10}\n                    value={this.state.dailyData.pushups}\n                    onChange={(valueAsNum, valueAsString, el) => this.handleDailyDataUpdate('pushups', el, valueAsNum)}/>\n                </InputGroup>\n              </Col>\n            </Row>\n            <Row>\n              <Col xs={12} md={6}>\n                <InputGroup className=\"mb-3\">\n                  <InputGroup.Prepend>\n                    <InputGroup.Text><IoIosFitness className=\"flash\" color={currentProgress.pushups ? 'green' : 'red'}/></InputGroup.Text>\n                    <InputGroup.Text>Goal</InputGroup.Text>\n                  </InputGroup.Prepend>\n                  <NumericInput \n                    size={5}\n                    className=\"form-control\"\n                    name=\"pushups_goal\"\n                    step={10}\n                    value={this.state.dailyData.pushups_goal}\n                    onChange={(valueAsNum, valueAsString, el) => this.handleDailyDataUpdate('pushups_goal', el, valueAsNum)}/>\n                </InputGroup>\n              </Col>\n            </Row>\n            <hr/><br/>\n            <input type=\"hidden\"/>\n            <Button type=\"submit\" name=\"form_submitted\" value=\"1\">Save</Button>\n          </Card.Body>\n        </form>\n      )\n      if(this.state.weeklyRadarData){\n        weeklyRadar = (\n          <Radar data={this.state.weeklyRadarData ? this.state.weeklyRadarData : this.state.dataholder}/>\n        );\n      }\n    }\n    if(this.state.weeklyInOutData){\n      weeklyInOutBar = this.state.weeklyInOutData ? (\n        <Bar\n          data={this.state.weeklyInOutData}\n          width={100}\n          height={200}\n          options={{\n            maintainAspectRatio: false\n          }}\n        />\n      ) : null;\n    }\n    if(this.state.weeklyPrayersBar){\n      //take out of if and into self if for weeklyInOut and prayer;\n      weeklyPrayersBar = this.state.weeklyPrayersData ? (\n        <Bar\n          data={this.state.weeklyPrayersData}\n           width={100}\n          height={200}\n          options={{\n            maintainAspectRatio: false\n          }}\n        />\n      ) : null;\n    }\n    return(\n      <React.Fragment>\n        <div className=\"bg\"></div>\n        <Container>\n          <Row className=\"justify-content-center\">\n            <Col xs={9}>\n              <div className=\"greeting_line1\">\n                {greeting} Mohammed, Where is your focus today? \n              </div>\n            </Col>\n          </Row>\n          <Row className=\"justify-content-center\">\n            <Col xs={7}>\n              <div className=\"greeting_line2\">\n                <span className=\"important\">{'<'} TIME is of the essence, its also all you have {'>'}</span>\n              </div>\n            </Col>\n          </Row>\n          <Row className=\"justify-content-center\">\n            <Col xs={3}>\n              <div className=\"newTarget\">New Target: <b><i>£{this.state.newTarget}</i></b><br/> by <b>July 30th</b></div>\n            </Col>\n          </Row>\n          <br/>\n          <h3>Weekly Progress</h3>\n          <Row>\n            <Col xs={12} lg={6}>\n              <Card>\n                <div className=\"m-20\">\n                  {weeklyRadar}\n                </div>\n              </Card>\n            </Col>\n            <Col xs={12} lg={6}>\n              <Card>\n                <div className=\"m-20\">{weeklyInOutBar}</div>\n              </Card>\n            </Col>\n          </Row>\n          <Accordion>\n            <Card>\n              <Accordion.Toggle as={Card.Header} eventKey=\"0\">Updates</Accordion.Toggle>\n              <Accordion.Collapse eventKey=\"0\"><div>{updateForm}</div></Accordion.Collapse>\n            </Card>\n          </Accordion>\n        </Container>\n\n      </React.Fragment>\n    )\n  }\n\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";"],"sourceRoot":""}